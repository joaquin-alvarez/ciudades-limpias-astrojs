---
---

<section id="que-haran" class="categories-section">
  <div class="container">
    <h2 class="section-title textured-title">¿QUÉ HARÁN LAS ESCUELAS?</h2>
    
    <div class="steps-slider">
      <button class="slider-arrow prev-arrow">&lt;</button>
      
      <div class="steps-container">
        <div class="step-card" data-step="1">
          <div class="step-number">1</div>
          <div class="step-content">
            <h3 class="step-title">EDUCAR Y PLANIFICAR</h3>
            <div class="step-points">20 puntos</div>
            <p class="step-description">
              Diseñar un proyecto pedagógico que aborde uno de los ejes temáticos propuestos con rigor científico y metodología educativa.
            </p>
          </div>
        </div>

        <div class="step-card" data-step="2">
          <div class="step-number">2</div>
          <div class="step-content">
            <h3 class="step-title">CREAR CONTENIDO DE COMUNICACIÓN</h3>
            <div class="step-points">20 puntos</div>
            <p class="step-description">
              Desarrollar una producción comunicacional en formato libre (video, podcast, infografía, etc.) que divulgue los contenidos trabajados de manera clara y atractiva.
            </p>
          </div>
        </div>

        <div class="step-card" data-step="3">
          <div class="step-number">3</div>
          <div class="step-content">
            <h3 class="step-title">GENERAR IMPACTO COMUNITARIO</h3>
            <div class="step-points">30 puntos</div>
            <p class="step-description">
              Implementar acciones concretas en su comunidad que generen transformaciones positivas y medibles en el presente.
            </p>
          </div>
        </div>

        <div class="step-card" data-step="4">
          <div class="step-number">4</div>
          <div class="step-content">
            <h3 class="step-title">AMPLIAR LA DIVULGACIÓN</h3>
            <div class="step-points">30 puntos</div>
            <p class="step-description">
              Maximizar el alcance de sus producciones comunicacionales para generar conciencia ambiental en la mayor audiencia posible.
            </p>
          </div>
        </div>
      </div>
      
      <button class="slider-arrow next-arrow">&gt;</button>

      <div class="step-indicators">
        <span class="step-indicator active" data-step="1"></span>
        <span class="step-indicator" data-step="2"></span>
        <span class="step-indicator" data-step="3"></span>
        <span class="step-indicator" data-step="4"></span>
      </div>
    </div>
    
    <div class="categories-content">
      <div class="categories-text">
        <h3 class="categories-subtitle">EJES TEMÁTICOS DISPONIBLES</h3>
        
        <p class="categories-description">
          Las escuelas participantes deben elegir uno de los siguientes ejes temáticos: microbasurales, contaminación de arroyos, gestión de residuos sólidos urbanos, separación en origen y canal de denuncias.
        </p>
      </div>
      
      <div class="categories-image">
        <img src={`${import.meta.env.BASE_URL}/images/categories-icon.webp`} alt="Íconos de categorías ambientales" />
      </div>
    </div>
    
    <div class="categories-list">
      <div class="category-item">MICROBASURALES</div>
      <div class="category-item">SEPARACIÓN EN ORIGEN</div>
      <div class="category-item">CONTAMINACIÓN DE ARROYOS</div>
      <div class="category-item">CANAL DE DENUNCIAS</div>
    </div>
  </div>
</section>

<style>
  .categories-section {
    padding: 80px 0;
    background-color: var(--color-light-bg);
  }
  
  .textured-title {
    text-align: center;
    color: var(--color-primary);
    margin-bottom: 3rem;
  }
  
  .steps-slider {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    max-width: 800px;
    margin: 0 auto 4rem;
    padding-bottom: 40px; /* Espacio aumentado para los indicadores */
    overflow: visible; /* Asegurar que los elementos flotantes sean visibles */
  }
  
  .slider-arrow {
    background: var(--color-primary);
    color: white;
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 3  ;
  }
  
  .prev-arrow {
    margin-right: -20px;
  }
  
  .next-arrow {
    margin-left: -20px;
  }
  
  .steps-container {
    display: flex;
    width: 100%;
    position: relative;
    min-height: 220px; /* Establecer altura mínima igual a la altura de la tarjeta */
    height: 220px; /* Altura fija */
    margin: 10px 0 40px; /* Espacio para la animación */
    overflow: visible; /* Permitir que la animación sea visible fuera del contenedor */
  }

  .step-card {
    background: white;
    border: 2px solid var(--color-primary);
    border-radius: 12px;
    padding: 30px;
    width: 100%;
    min-width: 100%;
    max-width: 100%;
    height: 220px; /* Alto fijo para todas las tarjetas */
    flex: 0 0 100%;
    display: flex;
    gap: 30px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
    flex-shrink: 0;
    position: absolute;
    left: 0;
    top: 0;
    opacity: 0;
    visibility: hidden;
    transform: translateY(20px);
    transition: opacity 0.6s ease, visibility 0.6s ease, transform 0.6s ease;
    overflow: visible; /* Permitir que el contenido y efectos sean visibles fuera de la tarjeta */
    will-change: transform, opacity; /* Optimización de rendimiento */
  }

  .step-card::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 180px;
    height: 180px;
    background-color: rgba(140, 198, 63, 0.08); /* Color secundario con opacidad */
    border-radius: 50%;
    transform: translate(50%, -50%);
    z-index: 0;
  }

  .step-card.active {
    opacity: 1;
    visibility: visible;
    position: relative;
    transform: translateY(0);
    animation: cardPulse 0.5s ease-in-out;
    z-index: 2; /* Asegurar que la tarjeta activa esté por encima */
  }

  @keyframes cardPulse {
    0% { transform: scale(0.98); }
    50% { transform: scale(1.01); }
    100% { transform: scale(1); }
  }

  .step-indicators {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    gap: 12px;
    margin-top: 15px;
    z-index: 10; /* Asegurar que estén por encima de todo */
  }

  .step-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: #ccc;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  }

  .step-indicator::before {
    content: attr(data-step);
    position: absolute;
    top: -20px;
    left: 50%;
    transform: translateX(-50%) translateY(10px) scale(0.7);
    opacity: 0;
    color: var(--color-primary);
    font-weight: bold;
    font-size: 0.75rem;
    transition: transform 0.3s ease, opacity 0.3s ease;
    pointer-events: none;
  }

  .step-indicator:hover::before {
    transform: translateX(-50%) translateY(0) scale(0.7);
    opacity: 1;
  }

  .step-indicator.active {
    background-color: var(--color-primary);
    transform: scale(1.3);
  }
  
  .step-indicator.active::before {
    transform: translateX(-50%) translateY(0) scale(0.7);
    opacity: 1;
  }
  
  .step-number {
    background: var(--color-secondary);
    color: white;
    width: 70px;
    height: 70px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2.5rem;
    font-weight: bold;
    font-family: var(--font-title);
    text-shadow: 1px 1px 2px rgba(0,0,0,0.2);
    position: relative;
    box-shadow: 0 4px 10px rgba(0,0,0,0.15);
    transform: rotate(-5deg);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .step-card:hover .step-number {
    transform: rotate(0deg) scale(1.05);
    box-shadow: 0 6px 12px rgba(0,0,0,0.2);
  }
  
  .step-content {
    flex: 1;
    position: relative;
    z-index: 1;
  }
  
  .step-title {
    color: var(--color-primary);
    font-size: 1.4rem;
    margin: 0 0 10px;
    font-family: var(--font-title);
    letter-spacing: 0.5px;
  }
  
  .step-points {
    display: inline-block;
    background: var(--color-secondary);
    color: white;
    padding: 2px 10px;
    border-radius: 4px;
    font-weight: bold;
    margin-bottom: 10px;
  }
  
  .step-description {
    color: #333;
  }
  
  .categories-content {
    display: flex;
    align-items: center;
    gap: 40px;
    margin-bottom: 2rem;
  }
  
  .categories-text {
    flex: 1;
  }
  
  .categories-subtitle {
    color: var(--color-primary);
    font-size: 1.8rem;
    margin: 0 0 1.5rem;
  }
  
  .categories-description {
    color: #333;
    font-size: 1.1rem;
  }
  
  .categories-image {
    flex: 1;
    max-width: 40%;
    text-align: center;
  }
  
  .categories-image img {
    max-width: 100%;
  }
  
  .categories-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 18px;
    margin-top: 2rem;
  }
  
  .category-item {
    background: var(--color-primary);
    color: white;
    padding: 20px 15px;
    text-align: center;
    border-radius: 8px;
    font-weight: bold;
    height: 80px; /* Altura fija para todas las cajas */
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
    cursor: pointer;
    letter-spacing: 0.5px;
    font-family: var(--font-title);
    font-size: 1.2rem;
  }
  
  /* Efecto de borde brillante */
  .category-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: var(--color-secondary);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.4s ease;
  }
  
  /* Efecto de círculo decorativo */
  .category-item::after {
    content: '';
    position: absolute;
    bottom: -50px;
    right: -50px;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.05);
    z-index: 0;
    transition: all 0.4s ease;
  }
  
  /* Efectos al pasar el cursor */
  .category-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    background: linear-gradient(145deg, var(--color-primary), #007a54);
  }
  
  .category-item:hover::before {
    transform: scaleX(1);
  }
  
  .category-item:hover::after {
    transform: scale(1.5);
    opacity: 0.8;
  }
  
  /* Animación de rebote sutil al cargar la página */
  @keyframes categoryAppear {
    0% { transform: translateY(20px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
  }
  
  .categories-list .category-item:nth-child(1) { animation: categoryAppear 0.5s ease-out 0.1s forwards; }
  .categories-list .category-item:nth-child(2) { animation: categoryAppear 0.5s ease-out 0.2s forwards; }
  .categories-list .category-item:nth-child(3) { animation: categoryAppear 0.5s ease-out 0.3s forwards; }
  .categories-list .category-item:nth-child(4) { animation: categoryAppear 0.5s ease-out 0.4s forwards; }
  
  /* Estado inicial para la animación */
  .categories-list .category-item {
    opacity: 0;
  }
  
  @media (max-width: 992px) {
    .categories-content {
      flex-direction: column;
    }
    
    .categories-image {
      max-width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const stepsContainer = document.querySelector('.steps-container');
    const stepCards = document.querySelectorAll('.step-card');
    const prevArrow = document.querySelector('.prev-arrow')! as HTMLButtonElement;
    const nextArrow = document.querySelector('.next-arrow')! as HTMLButtonElement;
    const indicators = document.querySelectorAll('.step-indicator');
    
    let currentStep = 1;
    const totalSteps = stepCards.length;

    // Inicializar - mostrar la primera tarjeta
    updateSlider();

    // Event listeners para flechas de navegación con bucle infinito
    prevArrow.addEventListener('click', () => {
      currentStep = currentStep > 1 ? currentStep - 1 : totalSteps; // Ir al último si estamos en el primero
      updateSlider();
    });
    
    nextArrow.addEventListener('click', () => {
      currentStep = currentStep < totalSteps ? currentStep + 1 : 1; // Volver al primero si estamos en el último
      updateSlider();
    });

    // Event listeners para indicadores
    indicators.forEach(indicator => {
      indicator.addEventListener('click', () => {
        currentStep = parseInt(indicator.getAttribute('data-step')!);
        updateSlider();
      });
    });

    // Swipe para dispositivos táctiles
    let touchStartX = 0;
    let touchEndX = 0;
    
    stepsContainer!.addEventListener('touchstart', (e: Event) => {
      const touchEvent = e as TouchEvent;
      touchStartX = touchEvent.changedTouches[0].screenX;
    }, false);
    
    stepsContainer!.addEventListener('touchend', (e: Event) => {
      const touchEvent = e as TouchEvent;
      touchEndX = touchEvent.changedTouches[0].screenX;
      handleSwipe();
    }, false);
    
    function handleSwipe() {
      const swipeThreshold = 50;
      if (touchEndX < touchStartX - swipeThreshold) {
        // Swipe izquierda -> siguiente (con bucle infinito)
        currentStep = currentStep < totalSteps ? currentStep + 1 : 1;
        updateSlider();
      } else if (touchEndX > touchStartX + swipeThreshold) {
        // Swipe derecha -> anterior (con bucle infinito)
        currentStep = currentStep > 1 ? currentStep - 1 : totalSteps;
        updateSlider();
      }
    }

    // Función para actualizar el estado del carrusel
    function updateSlider() {
      // Ocultar todas las tarjetas con un pequeño retraso para crear transición suave
      stepCards.forEach((card, index) => {
        const cardStep = parseInt(card.getAttribute('data-step')!);
        
        // Aplicar transición con un pequeño retraso para que la salida y entrada se vean bien
        setTimeout(() => {
          card.classList.toggle('active', cardStep === currentStep);
        }, cardStep === currentStep ? 50 : 0);
      });
      
      // Los botones siempre están activos en un carrusel infinito
      prevArrow.style.opacity = '1';
      nextArrow.style.opacity = '1';
      
      // Actualizar indicadores
      indicators.forEach(indicator => {
        const step = parseInt(indicator.getAttribute('data-step')!);
        indicator.classList.toggle('active', step === currentStep);
      });
    }
  });
</script>
